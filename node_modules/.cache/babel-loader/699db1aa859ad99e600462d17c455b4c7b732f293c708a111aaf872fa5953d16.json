{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport Cards from '../Cards';\nimport Footer from '../Footer';\nimport axios from 'axios';\nfunction AboutUs() {\n  // const [selectedImage, setSelectedImage] = useState(null);\n  // const fileInputRef = useRef(null);\n\n  // // Function to open the file input when the button is clicked\n  // // const handleButtonClick = () => {\n  // //   fileInputRef.current.click();\n  // // };\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [classificationResult, setClassificationResult] = useState(null);\n\n  // const handleFileChange = (event) => {\n  //   setSelectedFile(event.target.files[0]);\n  // };\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const formData = new FormData();\n  //   formData.append('file', selectedFile);\n\n  //   try {\n  //     const response = await axios.post('/upload', formData);\n  //     setClassificationResult(response.data.result);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  // // Function to handle file selection\n  // const handleFileSelect = (event) => {\n  //   const file = event.target.files[0]; // Get the selected file\n  //   if (file) {\n  //     // Display the selected image\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       setSelectedImage(e.target.result);\n  //     };\n  //     reader.readAsDataURL(file);\n  //   }\n\n  {/* <div style={{ width: '100%' }}>\r\n    <Cards />\r\n    <Footer />\r\n   </div> */}\n}\n_c = AboutUs;\nexport default AboutUs;\nvar _c;\n$RefreshReg$(_c, \"AboutUs\");","map":{"version":3,"names":["React","useState","useRef","Cards","Footer","axios","AboutUs","_c","$RefreshReg$"],"sources":["C:/Users/Admin/SIH_2023/src/components/pages/AboutUs.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Cards from '../Cards';\r\nimport Footer from '../Footer';\r\nimport axios from 'axios';\r\n\r\nfunction AboutUs() {\r\n  // const [selectedImage, setSelectedImage] = useState(null);\r\n  // const fileInputRef = useRef(null);\r\n\r\n  // // Function to open the file input when the button is clicked\r\n  // // const handleButtonClick = () => {\r\n  // //   fileInputRef.current.click();\r\n  // // };\r\n  // const [selectedFile, setSelectedFile] = useState(null);\r\n  // const [classificationResult, setClassificationResult] = useState(null);\r\n\r\n  // const handleFileChange = (event) => {\r\n  //   setSelectedFile(event.target.files[0]);\r\n  // };\r\n\r\n  // const handleSubmit = async (event) => {\r\n  //   event.preventDefault();\r\n\r\n  //   const formData = new FormData();\r\n  //   formData.append('file', selectedFile);\r\n\r\n  //   try {\r\n  //     const response = await axios.post('/upload', formData);\r\n  //     setClassificationResult(response.data.result);\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n\r\n  // // Function to handle file selection\r\n  // const handleFileSelect = (event) => {\r\n  //   const file = event.target.files[0]; // Get the selected file\r\n  //   if (file) {\r\n  //     // Display the selected image\r\n  //     const reader = new FileReader();\r\n  //     reader.onload = (e) => {\r\n  //       setSelectedImage(e.target.result);\r\n  //     };\r\n  //     reader.readAsDataURL(file);\r\n  //   }\r\n  \r\n      {/* <div style={{ width: '100%' }}>\r\n        <Cards />\r\n        <Footer />\r\n      </div> */}\r\n    \r\n\r\n   \r\n\r\n}\r\n\r\nexport default AboutUs;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAOA,CAAA,EAAG;EACjB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,CAAC;AACP;AACA;AACA,YAHO;AAQP;AAACC,EAAA,GAlDQD,OAAO;AAoDhB,eAAeA,OAAO;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}