{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\SIH_2023\\\\src\\\\components\\\\pages\\\\AboutUs.js\";\nimport React, { useState, useRef } from 'react';\nimport Cards from '../Cards';\nimport Footer from '../Footer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AboutUs() {\n  var _s = $RefreshSig$();\n  // const [selectedImage, setSelectedImage] = useState(null);\n  // const fileInputRef = useRef(null);\n\n  // // Function to open the file input when the button is clicked\n  // // const handleButtonClick = () => {\n  // //   fileInputRef.current.click();\n  // // };\n  // const [selectedFile, setSelectedFile] = useState(null);\n  // const [classificationResult, setClassificationResult] = useState(null);\n\n  // const handleFileChange = (event) => {\n  //   setSelectedFile(event.target.files[0]);\n  // };\n\n  // const handleSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const formData = new FormData();\n  //   formData.append('file', selectedFile);\n\n  //   try {\n  //     const response = await axios.post('/upload', formData);\n  //     setClassificationResult(response.data.result);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  // // Function to handle file selection\n  // const handleFileSelect = (event) => {\n  //   const file = event.target.files[0]; // Get the selected file\n  //   if (file) {\n  //     // Display the selected image\n  //     const reader = new FileReader();\n  //     reader.onload = (e) => {\n  //       setSelectedImage(e.target.result);\n  //     };\n  //     reader.readAsDataURL(file);\n  //   }\n  function FAQCard({\n    question,\n    answer\n  }) {\n    _s();\n    const [isOpen, setIsOpen] = useState(false);\n    const toggleOpen = () => {\n      setIsOpen(!isOpen);\n    };\n  }\n  _s(FAQCard, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = AboutUs;\nexport default AboutUs;\nvar _c;\n$RefreshReg$(_c, \"AboutUs\");","map":{"version":3,"names":["React","useState","useRef","Cards","Footer","axios","jsxDEV","_jsxDEV","AboutUs","_s","$RefreshSig$","FAQCard","question","answer","isOpen","setIsOpen","toggleOpen","style","display","flexDirection","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/SIH_2023/src/components/pages/AboutUs.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Cards from '../Cards';\r\nimport Footer from '../Footer';\r\nimport axios from 'axios';\r\n\r\nfunction AboutUs() {\r\n  // const [selectedImage, setSelectedImage] = useState(null);\r\n  // const fileInputRef = useRef(null);\r\n\r\n  // // Function to open the file input when the button is clicked\r\n  // // const handleButtonClick = () => {\r\n  // //   fileInputRef.current.click();\r\n  // // };\r\n  // const [selectedFile, setSelectedFile] = useState(null);\r\n  // const [classificationResult, setClassificationResult] = useState(null);\r\n\r\n  // const handleFileChange = (event) => {\r\n  //   setSelectedFile(event.target.files[0]);\r\n  // };\r\n\r\n  // const handleSubmit = async (event) => {\r\n  //   event.preventDefault();\r\n\r\n  //   const formData = new FormData();\r\n  //   formData.append('file', selectedFile);\r\n\r\n  //   try {\r\n  //     const response = await axios.post('/upload', formData);\r\n  //     setClassificationResult(response.data.result);\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n\r\n  // // Function to handle file selection\r\n  // const handleFileSelect = (event) => {\r\n  //   const file = event.target.files[0]; // Get the selected file\r\n  //   if (file) {\r\n  //     // Display the selected image\r\n  //     const reader = new FileReader();\r\n  //     reader.onload = (e) => {\r\n  //       setSelectedImage(e.target.result);\r\n  //     };\r\n  //     reader.readAsDataURL(file);\r\n  //   }\r\n  function FAQCard({ question, answer }) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n  \r\n    const toggleOpen = () => {\r\n      setIsOpen(!isOpen);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', height: '100vh'}}>\r\n       {/* <div>\r\n        {selectedImage && (\r\n          <div>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <h2>Selected Image:</h2>\r\n            </div>\r\n            <div style={{ textAlign: 'right' }}>\r\n            <h2>RESULT</h2>\r\n            </div>\r\n            <div style={{ textAlign: 'left' }}>\r\n            <img src={selectedImage} alt=\"Uploaded\" width=\"50%\" />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div> \r\n      <div style={{ textAlign: 'center' }}>\r\n        <h1>Upload and Display Image</h1>\r\n\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }}\r\n          onChange={handleFileSelect}\r\n          \r\n        />\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" onChange={handleFileChange} accept=\".jpg\" />\r\n        <button type=\"submit\">UPLOAD</button>\r\n      </form>\r\n      </div>\r\n      {classificationResult && (\r\n        <div>\r\n          <h2>Classification Result:</h2>\r\n          <pre>{JSON.stringify(classificationResult, null, 2)}</pre>\r\n        </div>\r\n      )} */}\r\n      {/* <div style={{ width: '100%' }}>\r\n        <Cards />\r\n        <Footer />\r\n      </div> */}\r\n    \r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default AboutUs;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACjB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAASC,OAAOA,CAAC;IAAEC,QAAQ;IAAEC;EAAO,CAAC,EAAE;IAAAJ,EAAA;IACrC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;IAE3C,MAAMe,UAAU,GAAGA,CAAA,KAAM;MACvBD,SAAS,CAAC,CAACD,MAAM,CAAC;IACpB,CAAC;EACH;EAACL,EAAA,CANQE,OAAO;EAMf;EAED,oBACEJ,OAAA;IAAKU,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA2C1F,CAAC;AAGV;AAACC,EAAA,GAhGQlB,OAAO;AAkGhB,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}